{
  "results": {
    "arc_challenge": {
      "alias": "arc_challenge",
      "acc,none": 0.22184300341296928,
      "acc_stderr,none": 0.012141659068147879,
      "acc_norm,none": 0.26791808873720135,
      "acc_norm_stderr,none": 0.01294203019513642
    },
    "arc_easy": {
      "alias": "arc_easy",
      "acc,none": 0.2558922558922559,
      "acc_stderr,none": 0.008953950243013993,
      "acc_norm,none": 0.24452861952861954,
      "acc_norm_stderr,none": 0.0088194611068226
    },
    "boolq": {
      "alias": "boolq",
      "acc,none": 0.3785932721712538,
      "acc_stderr,none": 0.008483341718024479
    },
    "hellaswag": {
      "alias": "hellaswag",
      "acc,none": 0.25413264289982074,
      "acc_stderr,none": 0.004344827546976558,
      "acc_norm,none": 0.26180043815972914,
      "acc_norm_stderr,none": 0.004387161203087962
    },
    "openbookqa": {
      "alias": "openbookqa",
      "acc,none": 0.172,
      "acc_stderr,none": 0.01689386887634748,
      "acc_norm,none": 0.28,
      "acc_norm_stderr,none": 0.020099950647503233
    },
    "piqa": {
      "alias": "piqa",
      "acc,none": 0.544613710554951,
      "acc_stderr,none": 0.011619292444157079,
      "acc_norm,none": 0.5130576713819369,
      "acc_norm_stderr,none": 0.011661845375886347
    },
    "winogrande": {
      "alias": "winogrande",
      "acc,none": 0.4988161010260458,
      "acc_stderr,none": 0.014052446290529019
    }
  },
  "group_subtasks": {
    "arc_challenge": [],
    "arc_easy": [],
    "boolq": [],
    "hellaswag": [],
    "openbookqa": [],
    "piqa": [],
    "winogrande": []
  },
  "configs": {
    "arc_challenge": {
      "task": "arc_challenge",
      "tag": [
        "ai2_arc"
      ],
      "dataset_path": "allenai/ai2_arc",
      "dataset_name": "ARC-Challenge",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Question: {{question}}\nAnswer:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "unsafe_code": false,
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Question: {{question}}\nAnswer:",
      "metadata": {
        "version": 1.0,
        "pretrained": "/home/rtx3090/code_jiaxi/OwLore/output_models/my_finetuned_model_lora/checkpoint-60/complete_model"
      }
    },
    "arc_easy": {
      "task": "arc_easy",
      "tag": [
        "ai2_arc"
      ],
      "dataset_path": "allenai/ai2_arc",
      "dataset_name": "ARC-Easy",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "Question: {{question}}\nAnswer:",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "unsafe_code": false,
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Question: {{question}}\nAnswer:",
      "metadata": {
        "version": 1.0,
        "pretrained": "/home/rtx3090/code_jiaxi/OwLore/output_models/my_finetuned_model_lora/checkpoint-60/complete_model"
      }
    },
    "boolq": {
      "task": "boolq",
      "tag": [
        "super-glue-lm-eval-v1"
      ],
      "dataset_path": "super_glue",
      "dataset_name": "boolq",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "{{passage}}\nQuestion: {{question}}?\nAnswer:",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": [
        "no",
        "yes"
      ],
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "acc"
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "passage",
      "metadata": {
        "version": 2.0,
        "pretrained": "/home/rtx3090/code_jiaxi/OwLore/output_models/my_finetuned_model_lora/checkpoint-60/complete_model"
      }
    },
    "hellaswag": {
      "task": "hellaswag",
      "tag": [
        "multiple_choice"
      ],
      "dataset_path": "hellaswag",
      "dataset_kwargs": {
        "trust_remote_code": true
      },
      "training_split": "train",
      "validation_split": "validation",
      "process_docs": "def process_docs(dataset: datasets.Dataset) -> datasets.Dataset:\n    def _process_doc(doc):\n        ctx = doc[\"ctx_a\"] + \" \" + doc[\"ctx_b\"].capitalize()\n        out_doc = {\n            \"query\": preprocess(doc[\"activity_label\"] + \": \" + ctx),\n            \"choices\": [preprocess(ending) for ending in doc[\"endings\"]],\n            \"gold\": int(doc[\"label\"]),\n        }\n        return out_doc\n\n    return dataset.map(_process_doc)\n",
      "doc_to_text": "{{query}}",
      "doc_to_target": "{{label}}",
      "unsafe_code": false,
      "doc_to_choice": "choices",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0,
        "pretrained": "/home/rtx3090/code_jiaxi/OwLore/output_models/my_finetuned_model_lora/checkpoint-60/complete_model"
      }
    },
    "openbookqa": {
      "task": "openbookqa",
      "dataset_path": "openbookqa",
      "dataset_name": "main",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "question_stem",
      "doc_to_target": "{{choices.label.index(answerKey.lstrip())}}",
      "unsafe_code": false,
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "question_stem",
      "metadata": {
        "version": 1.0,
        "pretrained": "/home/rtx3090/code_jiaxi/OwLore/output_models/my_finetuned_model_lora/checkpoint-60/complete_model"
      }
    },
    "piqa": {
      "task": "piqa",
      "dataset_path": "baber/piqa",
      "dataset_kwargs": {
        "trust_remote_code": true
      },
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "Question: {{goal}}\nAnswer:",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": "{{[sol1, sol2]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "goal",
      "metadata": {
        "version": 1.0,
        "pretrained": "/home/rtx3090/code_jiaxi/OwLore/output_models/my_finetuned_model_lora/checkpoint-60/complete_model"
      }
    },
    "winogrande": {
      "task": "winogrande",
      "dataset_path": "winogrande",
      "dataset_name": "winogrande_xl",
      "dataset_kwargs": {
        "trust_remote_code": true
      },
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "def doc_to_text(doc):\n    answer_to_num = {\"1\": 0, \"2\": 1}\n    return answer_to_num[doc[\"answer\"]]\n",
      "doc_to_target": "def doc_to_target(doc):\n    idx = doc[\"sentence\"].index(\"_\") + 1\n    return doc[\"sentence\"][idx:].strip()\n",
      "unsafe_code": false,
      "doc_to_choice": "def doc_to_choice(doc):\n    idx = doc[\"sentence\"].index(\"_\")\n    options = [doc[\"option1\"], doc[\"option2\"]]\n    return [doc[\"sentence\"][:idx] + opt for opt in options]\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0,
        "pretrained": "/home/rtx3090/code_jiaxi/OwLore/output_models/my_finetuned_model_lora/checkpoint-60/complete_model"
      }
    }
  },
  "versions": {
    "arc_challenge": 1.0,
    "arc_easy": 1.0,
    "boolq": 2.0,
    "hellaswag": 1.0,
    "openbookqa": 1.0,
    "piqa": 1.0,
    "winogrande": 1.0
  },
  "n-shot": {
    "arc_challenge": 5,
    "arc_easy": 5,
    "boolq": 5,
    "hellaswag": 5,
    "openbookqa": 5,
    "piqa": 5,
    "winogrande": 5
  },
  "higher_is_better": {
    "arc_challenge": {
      "acc": true,
      "acc_norm": true
    },
    "arc_easy": {
      "acc": true,
      "acc_norm": true
    },
    "boolq": {
      "acc": true
    },
    "hellaswag": {
      "acc": true,
      "acc_norm": true
    },
    "openbookqa": {
      "acc": true,
      "acc_norm": true
    },
    "piqa": {
      "acc": true,
      "acc_norm": true
    },
    "winogrande": {
      "acc": true
    }
  },
  "n-samples": {
    "winogrande": {
      "original": 1267,
      "effective": 1267
    },
    "piqa": {
      "original": 1838,
      "effective": 1838
    },
    "openbookqa": {
      "original": 500,
      "effective": 500
    },
    "hellaswag": {
      "original": 10042,
      "effective": 10042
    },
    "boolq": {
      "original": 3270,
      "effective": 3270
    },
    "arc_easy": {
      "original": 2376,
      "effective": 2376
    },
    "arc_challenge": {
      "original": 1172,
      "effective": 1172
    }
  },
  "config": {
    "model": "hf",
    "model_args": "pretrained=/home/rtx3090/code_jiaxi/OwLore/output_models/my_finetuned_model_lora/checkpoint-60/complete_model",
    "model_num_parameters": 1235814400,
    "model_dtype": "torch.bfloat16",
    "model_revision": "main",
    "model_sha": "",
    "batch_size": "auto",
    "batch_sizes": [
      8
    ],
    "device": null,
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null,
    "random_seed": 0,
    "numpy_seed": 1234,
    "torch_seed": 1234,
    "fewshot_seed": 1234
  },
  "git_hash": "aeb4a02",
  "date": 1754431816.820607,
  "pretty_env_info": "PyTorch version: 2.6.0+cu124\nIs debug build: False\nCUDA used to build PyTorch: 12.4\nROCM used to build PyTorch: N/A\n\nOS: Ubuntu 24.04.1 LTS (x86_64)\nGCC version: (Ubuntu 13.2.0-23ubuntu4) 13.2.0\nClang version: Could not collect\nCMake version: Could not collect\nLibc version: glibc-2.39\n\nPython version: 3.9.22 | packaged by conda-forge | (main, Apr 14 2025, 23:35:59)  [GCC 13.3.0] (64-bit runtime)\nPython platform: Linux-6.8.0-48-generic-x86_64-with-glibc2.39\nIs CUDA available: True\nCUDA runtime version: Could not collect\nCUDA_MODULE_LOADING set to: LAZY\nGPU models and configuration: GPU 0: NVIDIA GeForce RTX 3090\nNvidia driver version: 550.120\ncuDNN version: Could not collect\nHIP runtime version: N/A\nMIOpen runtime version: N/A\nIs XNNPACK available: True\n\nCPU:\nArchitecture:                         x86_64\nCPU op-mode(s):                       32-bit, 64-bit\nAddress sizes:                        39 bits physical, 48 bits virtual\nByte Order:                           Little Endian\nCPU(s):                               16\nOn-line CPU(s) list:                  0-15\nVendor ID:                            GenuineIntel\nModel name:                           11th Gen Intel(R) Core(TM) i9-11900F @ 2.50GHz\nCPU family:                           6\nModel:                                167\nThread(s) per core:                   2\nCore(s) per socket:                   8\nSocket(s):                            1\nStepping:                             1\nCPU(s) scaling MHz:                   54%\nCPU max MHz:                          5200.0000\nCPU min MHz:                          800.0000\nBogoMIPS:                             4992.00\nFlags:                                fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf tsc_known_freq pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb ssbd ibrs ibpb stibp ibrs_enhanced tpr_shadow flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid mpx avx512f avx512dq rdseed adx smap avx512ifma clflushopt intel_pt avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp hwp_pkg_req vnmi avx512vbmi umip pku ospke avx512_vbmi2 gfni vaes vpclmulqdq avx512_vnni avx512_bitalg avx512_vpopcntdq rdpid fsrm md_clear flush_l1d arch_capabilities\nVirtualization:                       VT-x\nL1d cache:                            384 KiB (8 instances)\nL1i cache:                            256 KiB (8 instances)\nL2 cache:                             4 MiB (8 instances)\nL3 cache:                             16 MiB (1 instance)\nNUMA node(s):                         1\nNUMA node0 CPU(s):                    0-15\nVulnerability Gather data sampling:   Mitigation; Microcode\nVulnerability Itlb multihit:          Not affected\nVulnerability L1tf:                   Not affected\nVulnerability Mds:                    Not affected\nVulnerability Meltdown:               Not affected\nVulnerability Mmio stale data:        Mitigation; Clear CPU buffers; SMT vulnerable\nVulnerability Reg file data sampling: Not affected\nVulnerability Retbleed:               Mitigation; Enhanced IBRS\nVulnerability Spec rstack overflow:   Not affected\nVulnerability Spec store bypass:      Mitigation; Speculative Store Bypass disabled via prctl\nVulnerability Spectre v1:             Mitigation; usercopy/swapgs barriers and __user pointer sanitization\nVulnerability Spectre v2:             Mitigation; Enhanced / Automatic IBRS; IBPB conditional; RSB filling; PBRSB-eIBRS SW sequence; BHI SW loop, KVM SW loop\nVulnerability Srbds:                  Not affected\nVulnerability Tsx async abort:        Not affected\n\nVersions of relevant libraries:\n[pip3] numpy==1.24.2\n[pip3] nvidia-cublas-cu12==12.4.5.8\n[pip3] nvidia-cuda-cupti-cu12==12.4.127\n[pip3] nvidia-cuda-nvrtc-cu12==12.4.127\n[pip3] nvidia-cuda-runtime-cu12==12.4.127\n[pip3] nvidia-cudnn-cu12==9.1.0.70\n[pip3] nvidia-cufft-cu12==11.2.1.3\n[pip3] nvidia-curand-cu12==10.3.5.147\n[pip3] nvidia-cusolver-cu12==11.6.1.9\n[pip3] nvidia-cusparse-cu12==12.3.1.170\n[pip3] nvidia-cusparselt-cu12==0.6.2\n[pip3] nvidia-nccl-cu12==2.21.5\n[pip3] nvidia-nvjitlink-cu12==12.4.127\n[pip3] nvidia-nvtx-cu12==12.4.127\n[pip3] torch==2.6.0\n[pip3] torchvision==0.21.0\n[pip3] triton==3.2.0\n[conda] numpy                     1.24.2                   pypi_0    pypi\n[conda] nvidia-cublas-cu12        12.4.5.8                 pypi_0    pypi\n[conda] nvidia-cuda-cupti-cu12    12.4.127                 pypi_0    pypi\n[conda] nvidia-cuda-nvrtc-cu12    12.4.127                 pypi_0    pypi\n[conda] nvidia-cuda-runtime-cu12  12.4.127                 pypi_0    pypi\n[conda] nvidia-cudnn-cu12         9.1.0.70                 pypi_0    pypi\n[conda] nvidia-cufft-cu12         11.2.1.3                 pypi_0    pypi\n[conda] nvidia-curand-cu12        10.3.5.147               pypi_0    pypi\n[conda] nvidia-cusolver-cu12      11.6.1.9                 pypi_0    pypi\n[conda] nvidia-cusparse-cu12      12.3.1.170               pypi_0    pypi\n[conda] nvidia-cusparselt-cu12    0.6.2                    pypi_0    pypi\n[conda] nvidia-nccl-cu12          2.21.5                   pypi_0    pypi\n[conda] nvidia-nvjitlink-cu12     12.4.127                 pypi_0    pypi\n[conda] nvidia-nvtx-cu12          12.4.127                 pypi_0    pypi\n[conda] torch                     2.6.0                    pypi_0    pypi\n[conda] torchvision               0.21.0                   pypi_0    pypi\n[conda] triton                    3.2.0                    pypi_0    pypi",
  "transformers_version": "4.48.2",
  "lm_eval_version": "0.4.8",
  "upper_git_hash": null,
  "tokenizer_pad_token": [
    "<|end_of_text|>",
    "128001"
  ],
  "tokenizer_eos_token": [
    "<|end_of_text|>",
    "128001"
  ],
  "tokenizer_bos_token": [
    "<|begin_of_text|>",
    "128000"
  ],
  "eot_token_id": 128001,
  "max_length": 131072,
  "task_hashes": {
    "winogrande": "cb7d189b18f880587e055d13153370ab6e05d9f9b3f25aa9888f4d50338d374d",
    "piqa": "0bb92b602ed549741bdcd7813729263f1209f88fb7b584b1496e2474cd0ae568",
    "openbookqa": "0aecc765d28bd522a87a59bf46086907aab2bd86a9e65ead755ee47135e68aec",
    "hellaswag": "971a6f1683520276abd4c86947174f875e72e857e03a276c41ca0e5cf90c1869",
    "boolq": "9a06662a571c985c46e3a834a948843c2eb456e4ac1fc6dd8176f9e1abcf8ce9",
    "arc_easy": "a49b20e864b8d8edb4b3196350fa33c136110e58200b2ad0c10e92162467564f",
    "arc_challenge": "6c6fd3a2d95849250fb9588b51e95d221146743971c6dd01d9cbdbd1f7f6a5d0"
  },
  "model_source": "hf",
  "model_name": "/home/rtx3090/code_jiaxi/OwLore/output_models/my_finetuned_model_lora/checkpoint-60/complete_model",
  "model_name_sanitized": "__home__rtx3090__code_jiaxi__OwLore__output_models__my_finetuned_model_lora__checkpoint-60__complete_model",
  "system_instruction": null,
  "system_instruction_sha": null,
  "fewshot_as_multiturn": false,
  "chat_template": null,
  "chat_template_sha": null,
  "start_time": 5562.477840134,
  "end_time": 6970.669163067,
  "total_evaluation_time_seconds": "1408.1913229330003"
}